{"version":3,"sources":["components/TopBar/style.ts","components/TopBar/index.ts","models/GameStatus.ts","components/TopBar/TopBar.tsx","components/Card/style.ts","components/Card/index.ts","components/Card/Card.tsx","pages/GameStart/style.ts","helpers/config.ts","helpers/api.ts","services/game.ts","helpers/hooks.ts","pages/GameStart/GameStart.tsx","pages/GameStart/index.ts","pages/GameEnter/index.ts","pages/GameEnter/GameEnter.tsx","pages/Game/style.ts","pages/Game/WaitingRoom.tsx","pages/Game/GameRules.tsx","pages/Game/GameWaiting.tsx","components/SpinnngWheel/index.js","components/SpinnngWheel/SpinningWheel.jsx","pages/Game/GameMagic.tsx","pages/Game/Game.tsx","pages/Game/index.tsx","pages/Home/style.ts","pages/Home/index.tsx","pages/Home/Home.tsx","state/index.ts","components/App/index.tsx","components/App/App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","link","color","textDecoration","TopBar","GameStatus","classes","className","AppBar","position","Toolbar","Typography","variant","to","minWidth","maxWidth","margin","marginTop","title","fontSize","Card","children","CardContent","component","paper","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","config","BASE_URL","process","axios","defaults","baseURL","headers","post","get","id","api","then","res","data","useLocalStorage","key","initialValue","useState","window","localStorage","getItem","error","console","log","storedValue","setStoredValue","setValue","value","setItem","initialState","name","player","GameStart","history","useHistory","setData","isSaving","setIsSaving","setError","setPlayerId","setPlayerName","handleInputChange","event","target","noValidate","onSubmit","preventDefault","playerId","shortid","generate","game","service","status","PENDING","moderator","joined","Date","push","catch","TextField","required","fullWidth","label","Boolean","onChange","autoFocus","Button","type","disabled","Alert","severity","LinearProgress","GameEnter","code","gameContainer","padding","justifyContent","height","WaitingRoom","onStartGame","canStart","location","href","src","alt","onClick","GameRules","onUnderstandTheRule","GameWaiting","Skeleton","Array","from","keys","map","x","Fragment","SpinningWheel","props","state","selectedItem","selectItem","bind","this","Math","floor","random","items","length","onSelectItem","setTimeout","setState","wheelVars","spinning","style","item","index","React","Component","options","GameMagic","players","setSelectedItem","strokeWidth","strokeColor","onUpdate","args","EVENTS","socket","io","Game","useParams","isLoading","setIsLoading","isGameStarted","setIsGameStarted","setPlayers","setGame","currentPlayer","currentPlayerName","doesUnderstandRule","setUnderStandRules","amIThisPayer","handleGameStart","emit","useEffect","newId","getTime","on","p","filter","Room","Grid","container","xs","List","sort","a","b","nameA","toUpperCase","nameB","comparison","sortByMe","ListItem","button","ListItemIcon","ListItemText","primary","Divider","content","textAlign","Home","RouterLink","Context","s","App","setGlobalState","Provider","newState","CssBaseline","Box","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4WAeeA,EAbGC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,KAAM,CACJC,MAAO,QACPC,eAAgB,YCTLC,ICFVC,EDEUD,EEMA,WACb,IAAME,EAAUb,IAEhB,OACE,yBAAKc,UAAWD,EAAQV,MACtB,kBAACY,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASR,MAAM,aACb,kBAACS,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,IAAD,CAAMC,GAAG,IAAIN,UAAWD,EAAQL,MAAhC,mB,+ECFGR,EAZGC,YAAW,CAC3BE,KAAM,CACJkB,SAAU,IACVC,SAAU,OACVC,OAAQ,OACRC,UAAW,OAEbC,MAAO,CACLC,SAAU,MCRCC,ECSkC,SAAC,GAAyB,IAAvBF,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,SACnDf,EAAUb,IAEhB,OACE,kBAAC,IAAD,CAAUc,UAAWD,EAAQV,MAC3B,kBAAC0B,EAAA,EAAD,KACE,kBAACX,EAAA,EAAD,CAAYY,UAAU,KAAKX,QAAQ,MAChCM,GAEFG,M,SJpBJhB,K,kBAAAA,E,gBAAAA,E,qBAAAA,M,KAMUA,QKgBAZ,EApBGC,aAAW,SAACC,GAAD,MAAY,CACvC6B,MAAO,CACLP,UAAWtB,EAAMK,QAAQ,GACzByB,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNZ,OAAQrB,EAAMK,QAAQ,GACtB6B,gBAAiBlC,EAAMmC,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPjB,UAAWtB,EAAMK,QAAQ,IAE3BmC,OAAQ,CACNnB,OAAQrB,EAAMK,QAAQ,EAAG,EAAG,Q,iBCdjBoC,EAJA,CACbC,SAAUC,oCCGZC,IAAMC,SAASC,QAAUL,EAAOC,SAChCE,IAAMC,SAASE,QAAQC,KAAK,gBAAkB,mBAE/BJ,QAAf,ECDMK,EAAM,SAACC,GAAD,OAAgBC,EAAIF,IAAJ,UAHX,SAGW,YAAuBC,IAAME,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCJzE,SAASC,EAAmBC,GAAwE,IAA3DC,EAA0D,uDAAnC,GAAmC,EAG3DC,oBAAiB,WACrD,IAIE,OAFaC,OAAOC,aAAaC,QAAQL,IAE1BC,EACf,MAAOK,GAGP,OADAC,QAAQC,IAAIF,GACLL,MAZsF,mBAG1FQ,EAH0F,KAG7EC,EAH6E,KAkB3FC,EAAW,SAACC,GAChB,IAEEF,EAAeE,GAEfT,OAAOC,aAAaS,QAAQb,EAAKY,GACjC,MAAON,GAEPC,QAAQC,IAAIF,KAIhB,MAAO,CAACG,EAAaE,GClBvB,IAAMG,EAAe,CACnBC,KAAM,GACNC,OAAQ,ICdKC,MDiBA,WACb,IAAMC,EAAUC,cACVhE,EAAUb,IAFkB,EAGV4D,mBAASY,GAHC,mBAG3BhB,EAH2B,KAGrBsB,EAHqB,OAIFlB,oBAAS,GAJP,mBAI3BmB,EAJ2B,KAIjBC,EAJiB,OAKRpB,mBAAS,IALD,mBAK3BI,EAL2B,KAKpBiB,EALoB,OAMVxB,EAAgB,aAA/ByB,EANyB,sBAORzB,EAAgB,eAAjC0B,EAPyB,oBAS5BC,EAAoB,SAACC,GAAiC,IAAD,EACjCA,EAAMC,OAAtBb,EADiD,EACjDA,KAAMH,EAD2C,EAC3CA,MACdQ,EAAQ,2BAAKtB,GAAN,kBAAaiB,EAAOH,MAgC7B,OACE,kBAAC,EAAD,CAAM7C,MAAM,qBACV,0BAAMX,UAAWD,EAAQ2B,KAAM+C,YAAU,EAACC,SA/BrB,SAACH,GAExB,GADAA,EAAMI,iBACDjC,EAAKiB,MAASjB,EAAKkB,OAAxB,CAEAM,GAAY,GAEZ,IAAMU,EAAWC,IAAQC,WACzBV,EAAYQ,GACZP,EAAc3B,EAAKkB,QFpCV,SAACmB,GAAD,OAAgBxC,EAAIH,KAFhB,SAE+B2C,GAAMvC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QEgDlEsC,CAVa,CACXrB,KAAMjB,EAAKiB,KACXsB,OAAQnF,EAAWoF,QACnBC,UAAW,CACTxB,KAAMjB,EAAKkB,OACXtB,GAAIsC,EACJQ,OAAQ,IAAIC,QAIE7C,MAAK,SAAAuC,GACrBb,GAAY,GACZJ,EAAQwB,KAAR,gBAAsBP,EAAKzC,QAC1BiD,OAAM,WACPrB,GAAY,GACZC,EAAS,0DAOP,yBAAKnE,UAAU,0BACb,kBAACwF,EAAA,EAAD,CACEnF,QAAQ,WACRI,OAAO,SACPgF,UAAQ,EACRC,WAAS,EACTpD,GAAG,SACHqD,MAAM,YACNhC,KAAK,SACLT,OAAQ0C,QAAQlD,EAAKkB,QACrBJ,MAAOd,EAAKkB,OACZiC,SAAUvB,EACVwB,WAAS,IAGX,kBAACN,EAAA,EAAD,CACEnF,QAAQ,WACRI,OAAO,SACPgF,UAAQ,EACRC,WAAS,EACTpD,GAAG,OACHqD,MAAM,YACNhC,KAAK,OACLT,OAAQ0C,QAAQlD,EAAKiB,MACrBH,MAAOd,EAAKiB,KACZkC,SAAUvB,KAGd,kBAACyB,EAAA,EAAD,CACEC,KAAK,SACLN,WAAS,EACTrF,QAAQ,YACRV,MAAM,UACNK,UAAWD,EAAQ6B,OACnBqE,SAAUhC,GANZ,cAUCf,GACC,kBAACgD,EAAA,EAAD,CAAOC,SAAS,SACbjD,GAGJe,GAAY,kBAACmC,EAAA,EAAD,CAAgB/F,QAAQ,aE1G9BgG,MCQA,WACb,IAAMvC,EAAUC,cADkB,EAEVjB,mBAAS,CAAEwD,KAAM,KAFP,mBAE3B5D,EAF2B,KAErBsB,EAFqB,OAGFlB,oBAAS,GAHP,mBAG3BmB,EAH2B,KAGjBC,EAHiB,OAIRpB,mBAAS,IAJD,mBAI3BI,EAJ2B,KAIpBiB,EAJoB,KAyBlC,OACE,kBAAC,EAAD,CAAMxD,MAAM,+BACV,0BAAM8D,YAAU,EAACC,SAhBI,SAACH,GACxBA,EAAMI,iBACDjC,EAAK4D,OAEVpC,GAAY,GACZc,EAAYtC,EAAK4D,MAAM9D,MAAK,SAAAuC,GAC1Bb,GAAY,GACZJ,EAAQwB,KAAR,gBAAsBP,EAAKzC,QAC1BiD,OAAM,WACPrB,GAAY,GACZC,EAAS,+BAAD,OAAgCzB,EAAK4D,aAO3C,kBAACd,EAAA,EAAD,CACEnF,QAAQ,WACRI,OAAO,SACPgF,UAAQ,EACRC,WAAS,EACTpD,GAAG,OACHqD,MAAM,YACNhC,KAAK,OACLT,OAAQ0C,QAAQlD,EAAK4D,MACrB9C,MAAOd,EAAK4D,KACZT,SAhCkB,SAACtB,GAAiC,IAAD,EACjCA,EAAMC,OAAtBb,EADiD,EACjDA,KAAMH,EAD2C,EAC3CA,MACdQ,EAAQ,2BAAKtB,GAAN,kBAAaiB,EAAOH,MA+BrBsC,WAAS,IAEX,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLN,WAAS,EACTrF,QAAQ,YACRV,MAAM,UACNsG,SAAUhC,GALZ,cASCf,GACC,kBAACgD,EAAA,EAAD,CAAOC,SAAS,QAAQnG,UAAU,QAC/BkD,GAGJe,GAAY,kBAACmC,EAAA,EAAD,CAAgB/F,QAAQ,a,4GChD9BnB,GAfGC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ6B,QAAS,OACTE,WAAY,UAEdmF,cAAe,CACbC,QAASpH,EAAMK,QAAQ,GACvByB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZqF,eAAgB,SAChBC,OAAQ,YCsBGC,GA3BgD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvEnH,EAAOqD,OAAO+D,SAASC,KAC7B,OACE,yBAAK/G,UAAU,yCACb,kBAACI,EAAA,EAAD,CAAYC,QAAQ,MAApB,0CACA,2BACE,yBAAK2G,IAAKjF,4BAA0CkF,IAAI,aAE1D,kBAAC7G,EAAA,EAAD,CAAYC,QAAQ,MAApB,qDAA2E,2BAAIX,IAC/E,2BACGmH,GACC,kBAACd,EAAA,EAAD,CACEC,KAAK,SACLN,WAAS,EACTrF,QAAQ,YACRV,MAAM,UACNsG,UAAWY,EACXK,QAASN,GANX,qBCqEKO,GAjF8B,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAC9C,OACE,6BACE,wBAAIpH,UAAU,iBAAd,aAEA,yBAAKA,UAAU,aACb,0JACA,+KACA,iLACA,qIAGF,yBAAKA,UAAU,QACb,wBAAIA,UAAU,YAAd,mCAEA,4BACE,qIAEE,4BACE,4BACE,gGADF,4KAKA,gOAKA,+OAKA,2QAOJ,8FAGA,2FAGA,mIAEE,4BACE,oDAGA,6EAON,mKAEA,2RAGA,uBAAGA,UAAU,qBACX,kBAAC+F,EAAA,EAAD,CACEC,KAAK,SACLN,WAAS,EACTrF,QAAQ,YACRV,MAAM,UACNuH,QAASE,GALX,8BC7CKC,GAxBK,WAClB,OACE,yBAAKrH,UAAU,oDACb,yBAAKA,UAAU,SACb,kBAACsH,EAAA,EAAD,CAAUjH,QAAQ,OAAOL,UAAU,MAAM0G,OAAQ,KACjD,yBAAK1G,UAAU,QACXuH,MAAMC,KAAKD,MAAM,IAAIE,QAASC,KAAI,SAAAC,GAAC,OACnC,kBAAC,IAAMC,SAAP,CAAgBhF,IAAK+E,GACnB,yBAAK3H,UAAU,0BACb,kBAACsH,EAAA,EAAD,CAAUjH,QAAQ,SAASL,UAAU,gBAAgB0G,OAAQ,GAAI/E,MAAO,KACxE,kBAAC2F,EAAA,EAAD,CAAUjH,QAAQ,OAAOL,UAAU,cAAc0G,OAAQ,YAMnE,yBAAK1G,UAAU,oDACb,wBAAIA,UAAU,YAAd,yEACA,kBAACoG,EAAA,EAAD,CAAgBzG,MAAM,YAAYK,UAAU,0B,2DCpBrC6H,I,2DCGb,WAAYC,GAAQ,IAAD,+BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,MAEhB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,iBALD,E,0DAQL,IAAD,OACX,GAAgC,OAA5BC,KAAKJ,MAAMC,aAAuB,CACpC,IAAMA,EAAeI,KAAKC,MAAMD,KAAKE,SAAWH,KAAKL,MAAMS,MAAMC,QAC7DL,KAAKL,MAAMW,cACbC,YAAW,WACT,EAAKZ,MAAMW,aAAaT,KACvB,KAELG,KAAKQ,SAAS,CAAEX,sBAEhBG,KAAKQ,SAAS,CAAEX,aAAc,OAC9BU,WAAWP,KAAKF,WAAY,O,+BAItB,IACAD,EAAiBG,KAAKJ,MAAtBC,aACAO,EAAUJ,KAAKL,MAAfS,MAEFK,EAAY,CAChB,YAAaL,EAAMC,OACnB,kBAAmBR,GAEfa,EAA4B,OAAjBb,EAAwB,WAAa,GAEtD,OACE,yBAAKhI,UAAU,mBACb,yBACEA,UAAS,gBAAW6I,GACpBC,MAAOF,EACP1B,QAASiB,KAAKF,YAEbM,EAAMb,KAAI,SAACqB,EAAMC,GAAP,OACT,yBACEhJ,UAAU,aACV4C,IAAKoG,EACLF,MAAO,CAAE,YAAaE,IAErBD,Y,GA/CoBE,IAAMC,YCSnCC,GAAU,CACd,WACA,WACA,SACA,WAyCaC,GAtC6B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACnBvG,oBAAU,GADS,mBACpDkF,EADoD,KACtCsB,EADsC,KAO3D,OACE,yBAAKtJ,UAAU,qCACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,wDACZgI,GAAgB,GAAM,wBAAIhI,UAAU,YAAd,kBAAyCmJ,GAAQnB,IACxE,kBAAC,GAAD,CAAeO,MAAOY,GAASV,aATlB,SAACM,GAAD,OAAkBO,EAAgBP,OAWjD,yBAAK/I,UAAU,IACb,kBAAC,KAAD,CACE2B,MAAM,MACN+E,OAAO,MACP6C,YAAa,EACbC,YAAY,MACZC,SAfS,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAkBvG,QAAQC,IAAIsG,QAmB7C,yBAAK1J,UAAU,mBACb,wBAAIA,UAAU,wBACXqJ,EAAQ3B,KAAI,SAAA9D,GAAM,OACjB,wBAAI5D,UAAU,kDAAkD4C,IAAKgB,EAAOtB,IAC1E,0BAAMtC,UAAU,uCAChB,8BAAO4D,EAAOD,cC7BtBgG,GACY,mBADZA,GAEe,sBAFfA,GAGK,UAHLA,GAIE,OAJFA,GAMQ,aAGRC,GAASC,IAAGhI,EAAOC,UC3BVgI,GD6Ba,WAC1B,IAAM/J,EAAUb,KACRoD,EAAOyH,cAAPzH,GAFwB,EAGEQ,oBAAS,GAHX,mBAGzBkH,EAHyB,KAGdC,EAHc,OAIUnH,oBAAS,GAJnB,mBAIzBoH,EAJyB,KAIVC,EAJU,OAKFrH,mBAAmB,IALjB,mBAKzBuG,EALyB,KAKhBe,EALgB,OAMRtH,qBANQ,mBAMzBiC,EANyB,KAMnBsF,EANmB,OAOK1H,EAAgB,aAPrB,mBAOzB2H,EAPyB,KAOVlG,EAPU,OAQWzB,EAAgB,eAR3B,mBAQzB4H,EARyB,KAQNlG,EARM,OASiB1B,EAAgB,oBATjC,mBASzB6H,EATyB,KASLC,EATK,KAe1BC,EAAe,SAAC9G,GACpB,OAAa,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQtB,MAAOgI,GA4BlBlD,EAAsB,WAC1BrC,GAAQA,EAAKzC,IAAMmI,EAAmB1F,EAAKzC,KA0D7C,SAASqI,IACPf,GAAOgB,KAAKjB,GAAmB5E,GAxDjC8F,qBAAU,WAIR,GAHAZ,GAAa,GAEb9G,QAAQC,IAAI,eAAgBkH,IACvBA,EAAe,CAClB,IAAMQ,EAAQjG,IAAQC,WACtBV,EAAY0G,GAGd,IAAKP,EAAmB,CACtB,IAAM5G,EAAO,WAAa,IAAI0B,MAAQ0F,UACtC1G,EAAcV,GAIhBiG,GAAOoB,GAAGrB,IAAgB,SAACN,GACzBlG,QAAQC,IAAI,oBAAqBiG,GACjCe,EAAWf,MAIbO,GAAOoB,GAAGrB,IAAuB,SAACsB,GAChCb,GAAW,SAAAf,GAAO,4BAAQA,GAAR,CAAiB4B,UAIrCrB,GAAOoB,GAAGrB,IAA0B,SAACsB,GACnC9H,QAAQC,IAAI,sBAAuB6H,GACnCb,GAAW,SAAAf,GAAO,OAAIA,EAAQ6B,QAAO,SAAAtH,GAAM,OAAIA,EAAOtB,KAAO2I,EAAE3I,YAIjEsH,GAAOoB,GAAGrB,IAAmB,WAC3BxG,QAAQC,IAAI,oBACZ+G,GAAiB,MAGnBnF,EAAY1C,GAAIE,MAAK,SAAAuC,GACnBkF,GAAa,GACbI,EAAQtF,GAGR6E,GAAOgB,KAAKjB,GAAa,CACvB5E,OACAnB,OAAQ,CACND,KAAM4G,EACNjI,GAAIgI,QAIP/E,OAAM,iBAGR,CAACjD,IAMJ,IAAM6I,EAAO,WACX,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC5L,QAAS,GACvB,kBAAC2L,EAAA,EAAD,CAAMrC,MAAI,EAACuC,GAAI,GACb,kBAAClL,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAU,sDAChCgK,EAAY,kBAAC1C,EAAA,EAAD,CAAUjH,QAAQ,SAAY,8CAAa0E,QAAb,IAAaA,OAAb,EAAaA,EAAMpB,OAEhE,kBAAC4H,EAAA,EAAD,KA/FS,SAAClC,GAsBhB,OAAOA,EAAQmC,MArBA,SAACC,EAAWC,GACzB,GAAID,EAAEnJ,KAAOgI,EACX,OAAQ,EAGV,GAAIoB,EAAEpJ,KAAOgI,EACX,OAAO,EAGT,IAAMqB,EAAQF,EAAE9H,KAAKiI,cACfC,EAAQH,EAAE/H,KAAKiI,cAEjBE,EAAa,EAMjB,OALIH,EAAQE,EACVC,EAAa,EACJH,EAAQE,IACjBC,GAAc,GAETA,KA6EAC,CAAS1C,GAAS3B,KAAI,SAAA9D,GAAM,OAC3B,kBAAC,IAAMgE,SAAP,CAAgBhF,IAAKgB,EAAOD,MAC1B,kBAACqI,EAAA,EAAD,CAAUC,QAAM,EAAChG,SAAUyE,EAAa9G,IACtC,kBAACsI,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAASxI,EAAOD,QAEhC,kBAAC0I,EAAA,EAAD,YAKR,kBAACjB,EAAA,EAAD,CAAMrC,MAAI,EAACuC,GAAI,EAAGtL,UAAWD,EAAQwG,eAClC2D,EAAgB,kBAAC,GAAD,CAAW9C,oBAAqBA,IAA0B,kBAAC,GAAD,CAAaR,YAAa+D,EAAiB9D,SArHrHwC,EAAQb,OAAS,GAAKkC,EAAY,OAAC3F,QAAD,IAACA,OAAD,EAACA,EAAMI,gBA2HlD,OAAIqF,GAAsBA,KAAkB,OAAKzF,QAAL,IAAKA,OAAL,EAAKA,EAAMzC,IAC9C,kBAAC,GAAD,CAAW+G,QAASA,EAAStE,KAAMA,IAI1C,yBAAK/E,UAAWD,EAAQV,MACrB2K,EAAY,kBAAC,GAAD,MAAkB,kBAACmB,EAAD,QEjKtBjM,GATGC,aAAW,SAACC,GAAD,MAAY,CACvCkN,QAAS,CACP9F,QAASpH,EAAMK,QAAQ,IAEzBsJ,KAAM,CACJwD,UAAW,cCLAC,OCOA,WACb,IAAMzM,EAAUb,KAEhB,OACE,kBAAC,EAAD,CAAMyB,MAAM,oBACV,kBAACyK,EAAA,EAAD,CAAMC,WAAS,EAACrL,UAAWD,EAAQuM,SACjC,kBAAClB,EAAA,EAAD,CAAMrC,MAAI,EAACuC,GAAI,EAAGtL,UAAWD,EAAQgJ,MACnC,kBAAChD,EAAA,EAAD,CAAQ1F,QAAQ,YAAYV,MAAM,UAAUqB,UAAWyL,IAAYnM,GAAG,UAAtE,iBAIF,kBAAC8K,EAAA,EAAD,CAAMrC,MAAI,EAACuC,GAAI,EAAGtL,UAAWD,EAAQgJ,MACnC,kBAAChD,EAAA,EAAD,CAAQ1F,QAAQ,YAAYV,MAAM,YAAYqB,UAAWyL,IAAYnM,GAAG,UAAxE,oBCjBJoD,GAA4B,CAChCqB,KAAM,CACJpB,KAAM,GACNsB,OAAQnF,EAAWoF,QACnBC,UAAW,CACT7C,GAAI,GACJqB,KAAM,GACNyB,OAAQ,IAAIC,OAGhBgE,QAAS,IAQLqD,GAAUzD,gBAAiC,CAC/ClB,MAAOrE,GACPiF,SAAU,SAAAgE,GAAC,OAAIA,K,OCtBFC,OCoBA,WAAgB,IAAD,EACI9J,mBAAsBY,IAD1B,mBACrBqE,EADqB,KACd8E,EADc,KAU5B,OACE,kBAAC,IAAD,KACE,kBAAC,GAAaC,SAAd,CAAuBtJ,MAAO,CAAEmF,SATnB,SAACoE,GAChBF,EAAe,2BACV9E,GACAgF,KAMuChF,UACxC,kBAACiF,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,YC7CdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.98ae3bd1.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  link: {\n    color: 'white',\n    textDecoration: 'none'\n  },\n}));\n\nexport default useStyles;\n","import TopBar from './TopBar'\n\nexport default TopBar;\n","enum GameStatus {\n  PENDING = 'PENDING',\n  ACTIVE = 'ACTIVE',\n  FINISHED = 'FINISHED',\n}\n\nexport default GameStatus;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nimport useStyles from './style';\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar color=\"secondary\">\n          <Typography variant=\"h6\">\n            <Link to=\"/\" className={classes.link}>\n              Mind Juice\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: '70vw',\n    margin: 'auto',\n    marginTop: '4em',\n  },\n  title: {\n    fontSize: 16,\n  },\n});\n\nexport default useStyles;\n","import Card from './Card';\n\nexport default Card;\n","import React, { ReactNode } from 'react';\nimport BaseCard from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './style';\n\ninterface CardProps {\n  title: string | ReactNode,\n}\n\nconst Card: React.FunctionComponent<CardProps> = ({ title, children }) => {\n  const classes = useStyles();\n\n  return (\n    <BaseCard className={classes.root}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          {title}\n        </Typography>\n        {children}\n      </CardContent>\n    </BaseCard>\n  )\n}\n\nexport default Card;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default useStyles;\n","const config = {\n  BASE_URL: process.env.REACT_APP_API || 'http://localhost:9000'\n};\n\nexport default config;\n","import axios from 'axios';\nimport config from './config';\n\n// TODO Consume global config\naxios.defaults.baseURL = config.BASE_URL;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport default axios;\n","import api from '../helpers/api';\nimport Game from '../models/Game';\n\nconst ENDPOINT = '/games';\n\nconst add =  (game: Game) => api.post(ENDPOINT, game).then(res => res.data);\nconst get = (id: string) => api.get(`${ENDPOINT}/${id}`).then(res => res.data);\nconst edit = (id: string, game: Game) => api.put(`${ENDPOINT}/${id}`, game).then(res => res.data);\n\nexport {\n  add,\n  get,\n  edit\n}","import { useState } from 'react';\n\nfunction useLocalStorage<T>(key: string, initialValue: string = ''): [string, (x: string) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<string>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item || initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: string) => {\n    try {\n      // Save state\n      setStoredValue(value);\n      // Save to local storage\n      window.localStorage.setItem(key, value);\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport { useLocalStorage }\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport shortid from 'shortid';\n\nimport Card from '../../components/Card';\nimport GameStatus from '../../models/GameStatus';\nimport useStyles from './style';\nimport * as service from '../../services/game';\nimport { useLocalStorage } from '../../helpers/hooks';\n\nconst initialState = {\n  name: '',\n  player: '',\n};\n\nexport default function GameStart() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [data, setData] = useState(initialState);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [, setPlayerId] = useLocalStorage('player_id');\n  const [, setPlayerName] = useLocalStorage('player_name');\n\n  const handleInputChange = (event: React.SyntheticEvent) => {\n    const { name, value } = event.target as HTMLInputElement;\n    setData({ ...data, [name]: value })\n  }\n\n  const handleFormSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (!data.name || !data.player) return;\n\n    setIsSaving(true);\n\n    const playerId = shortid.generate();\n    setPlayerId(playerId);\n    setPlayerName(data.player);\n\n    const game = {\n      name: data.name,\n      status: GameStatus.PENDING,\n      moderator: {\n        name: data.player,\n        id: playerId,\n        joined: new Date()\n      }\n    };\n\n    service.add(game).then(game => {\n      setIsSaving(false);\n      history.push(`/game/${game.id}`);\n    }).catch(() => {\n      setIsSaving(false);\n      setError('There was something wrong when starting the game');\n    })\n  };\n\n  return (\n    <Card title=\"Starts a new game\">\n      <form className={classes.form} noValidate onSubmit={handleFormSubmit}>\n        <div className=\"grid grid-cols-2 gap-4\">\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"player\"\n            label=\"Your name\"\n            name=\"player\"\n            error={!Boolean(data.player)}\n            value={data.player}\n            onChange={handleInputChange}\n            autoFocus\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Game name\"\n            name=\"name\"\n            error={!Boolean(data.name)}\n            value={data.name}\n            onChange={handleInputChange}\n          />\n        </div>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={isSaving}\n        >\n          Start game\n        </Button>\n        {error && (\n          <Alert severity=\"error\">\n            {error}\n          </Alert>\n        )}\n        {isSaving && <LinearProgress variant=\"query\" />}\n      </form>\n    </Card>\n  );\n}\n","import GameStart from './GameStart'\n\nexport default GameStart;\n","import GameEnter from './GameEnter'\n\nexport default GameEnter;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Alert from '@material-ui/lab/Alert';\nimport { useHistory } from \"react-router-dom\";\n\nimport Card from '../../components/Card';\nimport * as service from '../../services/game';\n\nexport default function GameEnter() {\n  const history = useHistory();\n  const [data, setData] = useState({ code: '' });\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleInputChange = (event: React.SyntheticEvent) => {\n    const { name, value } = event.target as HTMLInputElement;\n    setData({ ...data, [name]: value })\n  }\n\n  const handleFormSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (!data.code) return;\n\n    setIsSaving(true);\n    service.get(data.code).then(game => {\n      setIsSaving(false);\n      history.push(`/game/${game.id}`);\n    }).catch(() => {\n      setIsSaving(false);\n      setError(`No game found with the code ${data.code}`);\n    })\n  };\n\n  return (\n    <Card title=\"Enter into an existing game\">\n      <form noValidate onSubmit={handleFormSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"code\"\n          label=\"Game code\"\n          name=\"code\"\n          error={!Boolean(data.code)}\n          value={data.code}\n          onChange={handleInputChange}\n          autoFocus\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isSaving}\n        >\n          Enter game\n        </Button>\n        {error && (\n          <Alert severity=\"error\" className=\"mt-3\">\n            {error}\n          </Alert>\n        )}\n        {isSaving && <LinearProgress variant=\"query\" />}\n      </form>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  gameContainer: {\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '90vh',\n  }\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Typography, Button } from '@material-ui/core';\n\nexport interface WaitingRoomProps {\n  onStartGame: () => void,\n  canStart: boolean;\n}\n\nconst WaitingRoom: React.FunctionComponent<WaitingRoomProps> = ({ onStartGame, canStart }) => {\n  const link = window.location.href;\n  return (\n    <div className=\"flex flex-col items-center space-y-10\">\n      <Typography variant=\"h4\">We are waiting for the players to join</Typography>\n      <p>\n        <img src={process.env.PUBLIC_URL + '/imgs/cat.gif'} alt=\"Cat gif\" />\n      </p>\n      <Typography variant=\"h5\">You can share this link with your friends to join <b>{link}</b></Typography>\n      <p>\n        {canStart && (\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!canStart}\n            onClick={onStartGame}\n          >\n            Start the game\n          </Button>\n        )}\n      </p>\n    </div>\n  );\n}\n\nexport default WaitingRoom;\n","import React from 'react'\nimport { Button } from '@material-ui/core';\n\ninterface GamesRulesProps {\n  onUnderstandTheRule: () => void;\n}\n\nconst GameRules: React.FC<GamesRulesProps> = ({ onUnderstandTheRule }) => {\n  return (\n    <div>\n      <h1 className=\"text-5xl mb-4\">Game Play</h1>\n\n      <div className=\"space-y-4\">\n        <p>The objective of this game is to practice the behaviors and thinking of the empathize and ideate phases of design thinking.</p>\n        <p>The purpose is to have game players brainstorm innovative ideas by looking at objects in different perspectives and thinking beyond the obvious.</p>\n        <p>The game is based on the concept of disruptive thinking to look at an object and coming up with an entirely different way to achieve the same end.</p>\n        <p>This game encourage wild ideas and players are voting on eachothers ideas on usability and creativity</p>\n      </div>\n\n      <div className=\"my-4\">\n        <h2 className=\"text-4xl\">There are 4 steps in this game:</h2>\n\n        <ol>\n          <li>\n            In this step the spinning wheel is turned that features four different ways on approaching innovation:\n            <ol>\n              <li>\n                <span>Boost it \t-\tIn this case one card will be drawn from the deck.</span>\n                Players are to add or change one or more elements depicted on the card to improve the ojbect or idea.\n                Players can draw the improvement and describe it in 250 characters\n              </li>\n              <li>\n                Mutate\t-\tIn this case one card will be drawn from the deck.\n                Players are to use the object on the card for a different purpose\n                Players can draw the new purpose and describe it in 250 characters\n              </li>\n              <li>\n                Merge it\t- \tIn this case two cards will be drawn from the deck.\n                Players are to pick items or parts from each picture and create a new object.\n                Players can draw the new object and describe it in 250 characters\n              </li>\n              <li>\n                Disrupt\t-\tIn this case one card will be drawn from the deck.\n                Players are to come up with a completely different way (object) to achieve the same purpose of the object.\n                Players can draw the new object and describe it in 250 characters\n              </li>\n            </ol>\n          </li>\n          <li>\n            In this step the card(s) are drawn from the deck and displayed\n          </li>\n          <li>\n            The players have 5 minutes to draw and type their solutions\n          </li>\n          <li>\n            After all players submitted their solutions, it is voting time. There are 2 votes that can be casted\n            <ol>\n              <li>\n                Most usable solution\n              </li>\n              <li>\n                Most crazy / funky out of the box solution\n              </li>\n            </ol>\n          </li>\n        </ol>\n\n        <p>In total their are 3 round and after each voting round the leaderboard is shown ranked based on Most Usable Solution votes received.</p>\n\n        <p>After the final round the players their names are shown scattered and the player with most \"Most usable solution\" votes is highlighted (bigger font)\n        and the player with the \"most crazy / funky out of the box solution\" votes is highlighted (bigger font)</p>\n\n        <p className=\"mt-5 w-1/3 m-auto\">\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onUnderstandTheRule}\n          >\n            I understand the rules\n          </Button>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default GameRules;\n","import React from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst GameWaiting = () => {\n  return (\n    <div className=\"p-2 flex w-full h-screen space-between space-x-3\">\n      <div className=\"w-1/4\">\n        <Skeleton variant=\"text\" className=\"m-4\" height={60} />\n        <div className=\"mt-6\">\n          {(Array.from(Array(10).keys())).map(x => (\n            <React.Fragment key={x}>\n              <div className=\"flex space-between m-4\">\n                <Skeleton variant=\"circle\" className=\"flex-shrink-0\" height={40} width={40} />\n                <Skeleton variant=\"text\" className=\"w-full ml-4\" height={40} />\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n      <div className=\"w-full flex flex-col items-center justify-center\">\n        <h2 className=\"text-2xl\">Just a second, we are checking the game. It should start in a second.</h2>\n        <LinearProgress color=\"secondary\" className=\"mt-10 w-10/12 h-20\" />\n      </div>\n    </div>\n  );\n}\n\nexport default GameWaiting;\n","import SpinningWheel from './SpinningWheel';\n\nexport default SpinningWheel;\n","import React from 'react';\n\nimport './style.css';\n\nexport default class Wheel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: null,\n    };\n    this.selectItem = this.selectItem.bind(this);\n  }\n\n  selectItem() {\n    if (this.state.selectedItem === null) {\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\n      if (this.props.onSelectItem) {\n        setTimeout(() => {\n          this.props.onSelectItem(selectedItem);\n        }, 4 * 1000);\n      }\n      this.setState({ selectedItem });\n    } else {\n      this.setState({ selectedItem: null });\n      setTimeout(this.selectItem, 500);\n    }\n  }\n\n  render() {\n    const { selectedItem } = this.state;\n    const { items } = this.props;\n\n    const wheelVars = {\n      '--nb-item': items.length,\n      '--selected-item': selectedItem,\n    };\n    const spinning = selectedItem !== null ? 'spinning' : '';\n\n    return (\n      <div className=\"wheel-container\">\n        <div\n          className={`wheel ${spinning}`}\n          style={wheelVars}\n          onClick={this.selectItem}\n        >\n          {items.map((item, index) => (\n            <div\n              className=\"wheel-item\"\n              key={index}\n              style={{ '--item-nb': index }}\n            >\n              {item}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\n\nimport Game from '../../models/Game';\nimport Player from '../../models/Player';\n\nimport SpinningWheel from '../../components/SpinnngWheel';\n\ninterface GameMagicProps {\n  players: Player[];\n  game: Game;\n}\n\nconst options = [\n  'MERGE IT',\n  'BOOST IT',\n  'MUTATE',\n  'DISRUPT'\n];\n\nconst GameMagic: React.FC<GameMagicProps> = ({ players }) => {\n  const [selectedItem, setSelectedItem] = useState(-1);\n\n  const onSelectItem = (item: number) => setSelectedItem(item);\n\n  const drawUpdate = (...args: any) => console.log(args);\n\n  return (\n    <div className=\"p-4 flex flex-col w-full h-screen\">\n      <div className=\"flex-grow flex items-center justify-between\">\n        <div className=\"flex flex-col items-center justify-between flex-grow\">\n          {selectedItem > -1 && (<h4 className=\"text-2xl\">Item Selected: {options[selectedItem]}</h4>)}\n          <SpinningWheel items={options} onSelectItem={onSelectItem} />\n        </div>\n        <div className=\"\">\n          <ReactSketchCanvas\n            width=\"700\"\n            height=\"500\"\n            strokeWidth={4}\n            strokeColor=\"red\"\n            onUpdate={drawUpdate}\n          />\n        </div>\n      </div>\n      <div className=\"h-48 p-2 w-full\">\n        <ul className=\"flex justify-between\">\n          {players.map(player => (\n            <li className=\"flex flex-col items-center justify-between h-20\" key={player.id}>\n              <span className=\"h-12 w-12 bg-gray-200 rounded-full\"></span>\n              <span>{player.name}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default GameMagic;","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { ListItem, ListItemText, Divider, List, ListItemIcon, Typography } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { useParams } from \"react-router\";\nimport io from 'socket.io-client';\nimport shortid from 'shortid';\n\nimport config from '../../helpers/config';\nimport Player from '../../models/Player';\nimport { useLocalStorage } from '../../helpers/hooks';\nimport Game from '../../models/Game';\nimport useStyles from './style';\nimport * as service from '../../services/game';\nimport WaitingRoom from './WaitingRoom';\nimport GameRules from './GameRules';\nimport GameWaiting from './GameWaiting';\nimport GameMagic from './GameMagic';\n\nconst EVENTS = {\n  PLAYER_CONNECT: 'player-connected',\n  PLAYER_DISCONNECT: 'player-disconnected',\n  PLAYERS: 'players',\n  JOIN: 'join',\n  LEAVE: 'leave',\n  GAME_START: 'game-start',\n};\n\nconst socket = io(config.BASE_URL);\n\nconst GameMain: React.SFC = () => {\n  const classes = useStyles();\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [game, setGame] = useState<Game>();\n  const [currentPlayer, setPlayerId] = useLocalStorage('player_id');\n  const [currentPlayerName, setPlayerName] = useLocalStorage('player_name');\n  const [doesUnderstandRule, setUnderStandRules] = useLocalStorage('understand_rules');\n\n  const canStartGame = () => {\n    return players.length > 1 && amIThisPayer(game?.moderator);\n  }\n\n  const amIThisPayer = (player: Player | undefined) => {\n    return player?.id === currentPlayer;\n  }\n\n  const sortByMe = (players: Player[]) => {\n    const sortIt = (a: Player, b: Player) => {\n      if (a.id === currentPlayer) {\n        return -1;\n      }\n\n      if (b.id === currentPlayer) {\n        return 1;\n      }\n\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n\n      let comparison = 0;\n      if (nameA > nameB) {\n        comparison = 1;\n      } else if (nameA < nameB) {\n        comparison = -1;\n      }\n      return comparison;\n    };\n\n    return players.sort(sortIt);\n  }\n\n  const onUnderstandTheRule = () => {\n    game && game.id && setUnderStandRules(game.id);\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    console.log('currenPlayer', currentPlayer);\n    if (!currentPlayer) {\n      const newId = shortid.generate();\n      setPlayerId(newId);\n    }\n\n    if (!currentPlayerName) {\n      const name = 'Player ' + (new Date()).getTime();\n      setPlayerName(name);\n    }\n\n    // Listen to all players\n    socket.on(EVENTS.PLAYERS, (players: Player[]) => {\n      console.log('Players connected', players);\n      setPlayers(players);\n    })\n\n    // Listen to new player connected\n    socket.on(EVENTS.PLAYER_CONNECT, (p: Player) => {\n      setPlayers(players => [...players, p]);\n    });\n\n    // List to player disconnected\n    socket.on(EVENTS.PLAYER_DISCONNECT, (p: Player) => {\n      console.log('Player disconnected', p);\n      setPlayers(players => players.filter(player => player.id !== p.id));\n    });\n\n    // Listen to game has started\n    socket.on(EVENTS.GAME_START, () => {\n      console.log('Game has started');\n      setIsGameStarted(true);\n    });\n\n    service.get(id).then(game => {\n      setIsLoading(false);\n      setGame(game);\n\n      // Inform backend of player connected\n      socket.emit(EVENTS.JOIN, {\n        game,\n        player: {\n          name: currentPlayerName,\n          id: currentPlayer,\n        }\n      });\n\n    }).catch(() => {\n      // setIsLoading(false);\n    })\n  }, [id]);\n\n  function handleGameStart() {\n    socket.emit(EVENTS.GAME_START, game);\n  }\n\n  const Room = () => {\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={3}>\n          <Typography variant=\"h5\" className=\"pt-5 pl-5 pb-3 border-0 border-b-2 border-gray-600\">\n            {isLoading ? <Skeleton variant=\"text\" /> : <span>Game: {game?.name}</span>}\n          </Typography>\n          <List>\n            {sortByMe(players).map(player => (\n              <React.Fragment key={player.name}>\n                <ListItem button disabled={amIThisPayer(player)}>\n                  <ListItemIcon>\n                    <PersonIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={player.name} />\n                </ListItem>\n                <Divider />\n              </React.Fragment>\n            ))}\n          </List>\n        </Grid>\n        <Grid item xs={9} className={classes.gameContainer}>\n          {isGameStarted ? <GameRules onUnderstandTheRule={onUnderstandTheRule} /> : <WaitingRoom onStartGame={handleGameStart} canStart={canStartGame()} />}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  if (doesUnderstandRule && doesUnderstandRule === game?.id) {\n    return <GameMagic players={players} game={game} />;\n  }\n\n  return (\n    <div className={classes.root}>\n      {isLoading ? <GameWaiting /> : <Room />}\n    </div>\n  );\n}\n\nexport default GameMain;\n","import Game from './Game';\n\nexport default Game;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(5),\n  },\n  item: {\n    textAlign: 'center',\n  }\n}));\n\nexport default useStyles;\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport Card from '../../components/Card';\n\nimport useStyles from './style';\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <Card title=\"Choose an option\">\n      <Grid container className={classes.content}>\n        <Grid item xs={6} className={classes.item}>\n          <Button variant=\"contained\" color=\"primary\" component={RouterLink} to=\"/start\">\n            Start a game\n          </Button>\n        </Grid>\n        <Grid item xs={6} className={classes.item}>\n          <Button variant=\"contained\" color=\"secondary\" component={RouterLink} to=\"/enter\">\n            Enter a game\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  )\n}\n","import * as React from 'react';\nimport GlobalState from '../models/GlobalState';\nimport GameStatus from '../models/GameStatus';\n\nconst initialState: GlobalState = {\n  game: {\n    name: '',\n    status: GameStatus.PENDING,\n    moderator: {\n      id: '',\n      name: '',\n      joined: new Date()\n    }\n  },\n  players: [],\n}\n\ninterface StateSetter {\n  state: GlobalState;\n  setState(newState: GlobalState): void;\n}\n\nconst Context = React.createContext<StateSetter>({\n  state: initialState,\n  setState: s => s,\n});\n\nexport {\n  initialState,\n  Context,\n}","import App from './App'\n\nexport default App;\n","import React, { useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport TopBar from '../TopBar';\n\n// Pages\nimport GameStart from '../../pages/GameStart';\nimport GameEnter from '../../pages/GameEnter';\nimport Game from '../../pages/Game';\nimport Home from '../../pages/Home';\n\nimport GlobalState from '../../models/GlobalState';\nimport { Context as StateContext, initialState } from '../../state';\n\nimport '../../styles/tailwind.css';\n\nexport default function App() {\n  const [state, setGlobalState] = useState<GlobalState>(initialState);\n\n  const setState = (newState: GlobalState) => {\n    setGlobalState({\n      ...state,\n      ...newState,\n    })\n  };\n\n  return (\n    <Router>\n      <StateContext.Provider value={{ setState, state }}>\n        <CssBaseline />\n        <TopBar />\n        <Box>\n          <Switch>\n            <Route path=\"/game/:id\">\n              <Game />\n            </Route>\n            <Route path=\"/start\">\n              <GameStart />\n            </Route>\n            <Route path=\"/enter\">\n              <GameEnter />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Box>\n      </StateContext.Provider>\n    </Router>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}